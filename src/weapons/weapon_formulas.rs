use std::collections::HashMap;

use crate::{types::rs_types::{StatQuadraticFormula, RangeFormula, HandlingFormula, ReloadFormula, DamageMods, AmmoFormula}, d2_enums::{DamageType, AmmoType, WeaponType}, perks::{Perk, enhanced_handler::enhanced_check}};

use super::{Weapon, FiringConfig};

const HANDLING_DATA: [HandlingFormula; 14] = [HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0},stow: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0},ads: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00279338,offset:0.51985381},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00268436,offset:0.48414822},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.001875,offset:0.38975}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00290993,offset:0.73645497},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.0017933,offset:0.53964665},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00185566,offset:0.52937783}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.199386,offset:33.3015},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.153306,offset:28.8991},ads: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00272791,offset:0.55133684},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00232786,offset:0.48726765},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00187072,offset:0.50019128}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00294286,offset:0.47825714},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00295238,offset:0.51338095},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00166667,offset:0.33166667}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00144807,offset:0.49906125},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00286352,offset:0.44457124},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00169374,offset:0.41123302}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00239172,offset:0.49504997},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00204139,offset:0.45475013},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00123448,offset:0.4574687}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00312085,offset:0.54370932},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.0035545,offset:0.55005845},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00196208,offset:0.4574687}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00399874,offset:0.66359446},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00329651,offset:0.54633321},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00213926,offset:0.52898417}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00285337,offset:0.54056187},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00294122,offset:0.52721774},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00169353,offset:0.4114236}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00327126,offset:0.53887449},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00338866,offset:0.5711336},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00233806,offset:0.45119433}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00262394,offset:0.50794655},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00208393,offset:0.43925258},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.00194998,offset:0.50213254}}, HandlingFormula{ready: StatQuadraticFormula{evpp:0.0,vpp:-0.00237697,offset:0.47101782},stow: StatQuadraticFormula{evpp:0.0,vpp:-0.00254798,offset:0.44812954},ads: StatQuadraticFormula{evpp:0.0,vpp:-0.0018732,offset:0.35815764}}];
const RANGE_DATA:    [RangeFormula; 19] = [RangeFormula{floor_percent:0.0,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.09615,offset:11.75},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:41.0}}, RangeFormula{floor_percent:0.999,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:999.0},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:999.9}}, RangeFormula{floor_percent:0.5,fusion:true,start: StatQuadraticFormula{evpp:0.0,vpp:0.0324,offset:10.56},end: StatQuadraticFormula{evpp:0.0,vpp:0.025,offset:15.1}}, RangeFormula{floor_percent:0.33,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0877,offset:16.83},end: StatQuadraticFormula{evpp:0.0,vpp:0.0352,offset:29.67}}, RangeFormula{floor_percent:0.33,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.102,offset:18.65},end: StatQuadraticFormula{evpp:0.0,vpp:0.0205,offset:32.8}}, RangeFormula{floor_percent:0.33,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:19.3},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:29.67}}, RangeFormula{floor_percent:0.33,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:38.0},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:70.0}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0223,offset:28.5},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:38.2}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.07378,offset:16.329},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:40.4}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.1568,offset:30.25},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:60.75}}, RangeFormula{floor_percent:0.001,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0294,offset:3.77},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:14.5}}, RangeFormula{floor_percent:0.001,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0295,offset:5.77},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:12.75}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.093,offset:7.8},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:23.71}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.1247,offset:9.0835},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:28.11}}, RangeFormula{floor_percent:0.33,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0546,offset:15.0},end: StatQuadraticFormula{evpp:0.0,vpp:0.198,offset:30.33}}, RangeFormula{floor_percent:0.4,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.1017,offset:14.756},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:35.9}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0295,offset:11.85},end: StatQuadraticFormula{evpp:0.0,vpp:0.0287,offset:22.85}}, RangeFormula{floor_percent:0.5,fusion:false,start: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:28.3},end: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:43.2}}];
const RELOAD_DATA:   [ReloadFormula; 16] = [ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:0.0}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:8.557e-05,vpp:-0.0242021,offset:2.80673007}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:6.153e-05,vpp:-0.0198054,offset:2.8285704}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:7.552e-05,vpp:-0.0248947,offset:4.12880153}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:7.242e-05,vpp:-0.0216432,offset:3.24104607}}, ReloadFormula{ammo_percent:0.71,reload_data: StatQuadraticFormula{evpp:0.00012902,vpp:-0.0363945,offset:4.19575}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:5.885e-05,vpp:-0.0199884,offset:2.87206463}}, ReloadFormula{ammo_percent:0.65,reload_data: StatQuadraticFormula{evpp:9.054e-05,vpp:-0.0305819,offset:6.1219905}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:9.262e-05,vpp:-0.0256877,offset:2.92627267}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:0.00010396,vpp:-0.0252069,offset:4.09182213}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:0.00010291,vpp:-0.0276889,offset:3.11797357}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:6.405e-05,vpp:-0.0141721,offset:1.25061}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:6.745e-05,vpp:-0.0231542,offset:3.8384}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:6.086e-05,vpp:-0.0191345,offset:2.62769}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:2.383e-05,vpp:-0.0124553,offset:2.14667245}}, ReloadFormula{ammo_percent:0.0,reload_data: StatQuadraticFormula{evpp:2.383e-05,vpp:-0.0124553,offset:2.64667245}}];
const SCALAR_DATA:   [DamageMods; 31] = [DamageMods{pve:1.0,vehicle:1.0,miniboss:1.0,champion:1.0,boss:1.0,elite:1.0,minor:1.0}, DamageMods{vehicle:1.15,boss:1.15,champion:1.2,miniboss:1.2,elite:1.3,minor:1.3,pve:1.0}, DamageMods{vehicle:1.5,boss:1.5,champion:1.5,miniboss:1.5,elite:1.9,minor:2.3,pve:1.0}, DamageMods{vehicle:1.5,boss:1.5,champion:1.5,miniboss:1.5,elite:1.9,minor:2.5,pve:1.0}, DamageMods{vehicle:2.18,boss:2.55,champion:2.55,miniboss:2.55,elite:2.55,minor:2.73,pve:1.0}, DamageMods{vehicle:2.63,boss:2.55,champion:2.55,miniboss:2.55,elite:2.55,minor:2.73,pve:1.0}, DamageMods{vehicle:2.0,boss:2.0,champion:2.0,miniboss:2.0,elite:2.0,minor:2.0,pve:1.0}, DamageMods{vehicle:1.13,boss:1.58,champion:2.36,miniboss:2.36,elite:2.36,minor:3.13,pve:1.0}, DamageMods{vehicle:2.5,boss:2.5,champion:2.63,miniboss:2.63,elite:2.63,minor:3.13,pve:1.0}, DamageMods{vehicle:2.25,boss:2.25,champion:2.36,miniboss:2.36,elite:2.36,minor:3.13,pve:1.0}, DamageMods{vehicle:2.27,boss:2.27,champion:2.38,miniboss:2.38,elite:2.36,minor:3.13,pve:1.0}, DamageMods{vehicle:1.2,boss:1.3,champion:1.4,miniboss:1.4,elite:1.4,minor:2.13,pve:1.0}, DamageMods{vehicle:1.81,boss:1.81,champion:1.92,miniboss:1.92,elite:1.92,minor:2.03,pve:1.0}, DamageMods{vehicle:1.81,boss:1.54,champion:1.23,miniboss:1.64,elite:1.92,minor:2.03,pve:1.1}, DamageMods{vehicle:1.81,boss:1.54,champion:1.64,miniboss:1.64,elite:1.92,minor:2.03,pve:1.1}, DamageMods{vehicle:2.38,boss:2.16,champion:2.25,miniboss:2.25,elite:3.36,minor:4.2,pve:1.0}, DamageMods{vehicle:0.9,boss:1.0,champion:1.05,miniboss:1.05,elite:1.05,minor:1.48,pve:1.0}, DamageMods{vehicle:0.9,boss:0.9,champion:1.05,miniboss:1.05,elite:1.05,minor:1.48,pve:1.0}, DamageMods{vehicle:4.7,boss:4.7,champion:4.7,miniboss:5.0,elite:1.05,minor:6.0,pve:0.75}, DamageMods{vehicle:2.12,boss:2.12,champion:2.72,miniboss:2.72,elite:1.05,minor:6.0,pve:1.0}, DamageMods{vehicle:0.94,boss:0.94,champion:0.94,miniboss:0.94,elite:1.05,minor:6.0,pve:1.0}, DamageMods{vehicle:1.3,boss:1.3,champion:1.3,miniboss:1.3,elite:1.3,minor:1.9,pve:1.0}, DamageMods{vehicle:1.3,boss:1.3,champion:1.3,miniboss:1.3,elite:1.3,minor:1.9,pve:1.0}, DamageMods{vehicle:2.8,boss:2.3,champion:2.5,miniboss:2.5,elite:2.88,minor:3.2,pve:1.1}, DamageMods{vehicle:2.8,boss:2.3,champion:2.5,miniboss:2.5,elite:2.88,minor:3.2,pve:1.23}, DamageMods{vehicle:2.8,boss:2.3,champion:2.5,miniboss:2.5,elite:2.88,minor:3.2,pve:1.1}, DamageMods{vehicle:1.12,boss:1.2,champion:1.3,miniboss:1.3,elite:1.55,minor:2.55,pve:1.0}, DamageMods{vehicle:1.4,boss:1.53,champion:1.53,miniboss:1.53,elite:1.9,minor:1.9,pve:1.0}, DamageMods{vehicle:3.0,boss:3.0,champion:3.0,miniboss:3.0,elite:3.0,minor:4.5,pve:1.0}, DamageMods{vehicle:1.4,boss:1.5,champion:1.7,miniboss:1.7,elite:1.7,minor:1.9,pve:1.0}, DamageMods{vehicle:1.4,boss:1.55,champion:1.55,miniboss:1.55,elite:1.8,minor:1.8,pve:1.0}];
const FIRING_DATA:   [FiringConfig; 84] = [FiringConfig{damage:1.0,crit_mult:1.0,burst_delay:0.0,burst_size:0,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:13.4,crit_mult:1.5,burst_delay:0.083333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:14.3,crit_mult:1.6,burst_delay:0.1,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:22.0,crit_mult:1.6,burst_delay:0.166667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:20.0,crit_mult:1.6,burst_delay:0.133333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:18.0,crit_mult:1.7,burst_delay:0.166667,burst_size:4,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:15.0,crit_mult:1.4,burst_delay:0.133333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:100.7,crit_mult:1.6,burst_delay:0.684,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:34.3,crit_mult:1.5,burst_delay:0.648,burst_size:3,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:345.6,crit_mult:1.6,burst_delay:1.326,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:85.61,crit_mult:1.5,burst_delay:0.58,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:93.0,crit_mult:1.6,burst_delay:0.828,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:66.0,crit_mult:1.0,burst_delay:0.96,burst_size:5,burst_duration:0.233,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:27.22,crit_mult:1.0,burst_delay:0.5,burst_size:9,burst_duration:0.233,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:25.927,crit_mult:1.0,burst_delay:0.733,burst_size:21,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:38.6,crit_mult:1.0,burst_delay:0.66,burst_size:7,burst_duration:0.233,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:40.0,crit_mult:1.0,burst_delay:0.78,burst_size:7,burst_duration:0.233,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:326.0,crit_mult:1.0,burst_delay:0.767,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:38.6,crit_mult:1.0,burst_delay:0.66,burst_size:7,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:22.0,crit_mult:1.6,burst_delay:0.153,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:160.0,crit_mult:0.0,burst_delay:0.667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:200.0,crit_mult:0.0,burst_delay:0.667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:130.0,crit_mult:0.2,burst_delay:0.667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:46.5,crit_mult:1.5,burst_delay:0.43321,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:50.0,crit_mult:1.6,burst_delay:0.5,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:19.0,crit_mult:1.6,burst_delay:0.14458,burst_size:3,burst_duration:0.2333,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:40.0,crit_mult:1.5,burst_delay:0.3333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:38.0,crit_mult:1.4,burst_delay:0.26667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:78.0,crit_mult:1.6,burst_delay:0.66667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:42.0,crit_mult:1.6,burst_delay:0.4,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:131.0,crit_mult:2.5,burst_delay:0.3,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:165.03,crit_mult:3.009,burst_delay:0.533,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:726.0,crit_mult:1.2,burst_delay:1.033,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:18.0,crit_mult:1.3,burst_delay:0.06667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:34.0,crit_mult:1.4,burst_delay:0.16667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:30.0,crit_mult:1.4,burst_delay:0.13333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:75.0,crit_mult:1.0,burst_delay:0.5,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:234.0,crit_mult:1.4,burst_delay:0.13333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:14.0,crit_mult:1.7,burst_delay:0.11111,burst_size:3,burst_duration:0.1667,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:22.0,crit_mult:1.65,burst_delay:0.17647,burst_size:3,burst_duration:0.1667,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:19.0,crit_mult:1.7,burst_delay:0.15385,burst_size:3,burst_duration:0.1667,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:16.0,crit_mult:1.65,burst_delay:0.11111,burst_size:3,burst_duration:0.1667,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:15.7,crit_mult:1.46,burst_delay:0.11321,burst_size:5,burst_duration:0.3,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:15.5,crit_mult:1.7,burst_delay:0.13333,burst_size:4,burst_duration:0.2333,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:23.0,crit_mult:1.65,burst_delay:0.23346,burst_size:5,burst_duration:0.1,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:300.0,crit_mult:0.28,burst_delay:4.0,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:50.0,crit_mult:1.0,burst_delay:1.0,burst_size:7,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:270.0,crit_mult:0.28,burst_delay:4.0,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:330.0,crit_mult:0.28,burst_delay:3.0,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:300.0,crit_mult:0.07,burst_delay:1.0,burst_size:8,burst_duration:0.7,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:330.0,crit_mult:0.28,burst_delay:2.4,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:193.0,crit_mult:1.0,burst_delay:1.0,burst_size:2,burst_duration:0.3,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:31.0,crit_mult:1.7,burst_delay:0.3,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:40.0,crit_mult:1.8,burst_delay:0.4,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:47.0,crit_mult:1.7,burst_delay:0.5,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:30.5,crit_mult:1.7,burst_delay:0.3333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:27.5,crit_mult:1.7,burst_delay:0.23346,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:22.3,crit_mult:1.1,burst_delay:1.099908,burst_size:12,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:35.0,crit_mult:1.44,burst_delay:0.1,burst_size:5,burst_duration:0.29,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:19.1,crit_mult:1.1,burst_delay:0.933126,burst_size:12,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:151.0,crit_mult:1.75,burst_delay:0.93312,burst_size:1,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:16.7,crit_mult:1.1,burst_delay:0.433213,burst_size:12,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:18.33,crit_mult:1.1,burst_delay:0.75,burst_size:12,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:16.7,crit_mult:1.1,burst_delay:0.166667,burst_size:12,burst_duration:0.0,one_ammo:false,explosive:false,charge:false}, FiringConfig{damage:170.0,crit_mult:4.5,burst_delay:0.83333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:90.0,crit_mult:3.25,burst_delay:0.43321,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:131.0,crit_mult:2.9,burst_delay:0.66667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:158.0,crit_mult:3.0,burst_delay:0.83333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:15.0,crit_mult:1.44,burst_delay:0.08333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:11.25,crit_mult:1.5,burst_delay:0.06667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:10.86,crit_mult:1.65,burst_delay:0.06667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:17.0,crit_mult:1.4,burst_delay:0.1,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:18.73,crit_mult:1.4,burst_delay:0.1,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:130.97,crit_mult:1.0,burst_delay:1.09,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:105.77,crit_mult:1.0,burst_delay:0.75,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:146.05,crit_mult:1.0,burst_delay:1.33,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:12.0,crit_mult:1.4,burst_delay:0.0667,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:20.0,crit_mult:1.6,burst_delay:0.2,burst_size:3,burst_duration:0.1667,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:36.0,crit_mult:1.4,burst_delay:0.2,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:25.0,crit_mult:1.4,burst_delay:0.133333,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:40.0,crit_mult:1.4,burst_delay:0.233463,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:31.0,crit_mult:1.4,burst_delay:0.2,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:32.0,crit_mult:1.4,burst_delay:0.23331,burst_size:2,burst_duration:0.1333,explosive:false,charge:false,one_ammo:false}, FiringConfig{damage:34.0,crit_mult:2.0,burst_delay:0.3,burst_size:1,burst_duration:0.0,explosive:false,charge:false,one_ammo:false}];
const AMMO_DATA:     [AmmoFormula; 27] = [AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:1.0},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.322,offset:39.9},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.262,offset:33.1},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.2,offset:25.0},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:150.0},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.05,offset:2.51},reserve_id:111,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:-0.000233,vpp:0.09785,offset:-0.031468},reserve_id:232,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.1,offset:3.5},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:24.0},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.14166,offset:4.25},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.1,offset:3.5},reserve_id:3174300811,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0293,offset:3.2},reserve_id:221,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.7,offset:45.0},reserve_id:81,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.45,offset:29.5},reserve_id:82,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:13.0},reserve_id:2261491232,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:20.0},reserve_id:2940035732,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.3,offset:17.5},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:1.0},reserve_id:101,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.1,offset:10.0},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0375,offset:3.625},reserve_id:71,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.03,offset:2.4},reserve_id:121,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.1,offset:23.9},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.1,offset:28.9},reserve_id:0,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.035,offset:1.75},reserve_id:331,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.3,offset:74.0},reserve_id:251,round_to:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.11942675,offset:5.28980892},round_to:3,reserve_id:0}, AmmoFormula{mag: StatQuadraticFormula{evpp:0.0,vpp:0.0,offset:12.0},reserve_id:2984682260,round_to:0}];

const META_POINTERS: [(u8, usize); 16] = [(6, 0), (31, 1), (11, 2), (23, 3), (9, 4), (22, 5), (8, 6), (13, 7), (10, 8), (14, 9), (7, 10), (12, 11), (24, 12), (33, 13), (25, 14), (17, 15)];


#[derive(Debug, Clone)]
struct DataPointers {
    h: usize,
    r: usize,
    rl: usize,
    s: usize,
    f: usize,
    a: usize,
}

fn get_data_pointers(_weapon_type_id: u8, _intrinsic_hash: u32,) -> Result<DataPointers,()> {
    let weapon_paths:  [Vec<(u32, DataPointers)>; 16] = [vec![(878286503,DataPointers{r:1,h:1,rl:1,s:1,f:1,a:1}),(944506345,DataPointers{r:1,h:1,rl:1,s:1,f:2,a:2}),(961505134,DataPointers{r:1,h:1,rl:1,s:1,f:1,a:1}),(1019291327,DataPointers{r:1,h:1,rl:1,s:1,f:3,a:3}),(1294026524,DataPointers{r:1,h:1,rl:1,s:1,f:2,a:2}),(1458010786,DataPointers{r:1,h:1,rl:1,s:1,f:2,a:2}),(1484442054,DataPointers{r:1,h:1,rl:1,s:1,f:2,a:2}),(1636108362,DataPointers{r:1,h:1,rl:1,s:1,f:4,a:3}),(3208839961,DataPointers{r:0,h:1,rl:1,s:1,f:5,a:3}),(3610814281,DataPointers{r:1,h:1,rl:1,s:1,f:2,a:2}),(3755070117,DataPointers{r:1,h:1,rl:1,s:1,f:6,a:4}),(3602718766,DataPointers{r:1,h:1,rl:1,s:1,f:1,a:1})],vec![(715195141,DataPointers{r:2,h:2,rl:0,s:2,f:7,a:0}),(1470121888,DataPointers{r:2,h:2,rl:0,s:3,f:7,a:0}),(1573888036,DataPointers{r:2,h:2,rl:0,s:3,f:8,a:0}),(1699724249,DataPointers{r:2,h:2,rl:0,s:3,f:9,a:0}),(2108556049,DataPointers{r:2,h:2,rl:0,s:2,f:10,a:0}),(2186532310,DataPointers{r:2,h:2,rl:0,s:3,f:7,a:0}),(3239299468,DataPointers{r:2,h:2,rl:0,s:3,f:7,a:0}),(2226793914,DataPointers{r:2,h:2,rl:0,s:3,f:11,a:0})],vec![(656200654,DataPointers{r:3,h:3,rl:2,s:4,f:12,a:5}),(878286503,DataPointers{r:3,h:3,rl:2,s:4,f:13,a:5}),(1019291327,DataPointers{r:3,h:3,rl:2,s:4,f:12,a:5}),(1186480754,DataPointers{r:3,h:3,rl:2,s:4,f:14,a:5}),(1294026524,DataPointers{r:3,h:3,rl:2,s:4,f:15,a:5}),(1636108362,DataPointers{r:3,h:3,rl:2,s:4,f:16,a:5}),(1656957541,DataPointers{r:2,h:3,rl:2,s:4,f:17,a:5}),(1657056865,DataPointers{r:2,h:3,rl:0,s:5,f:0,a:0}),(1927916065,DataPointers{r:2,h:3,rl:2,s:4,f:16,a:5}),(2518716062,DataPointers{r:3,h:3,rl:2,s:4,f:18,a:5}),(3610750208,DataPointers{r:1,h:1,rl:1,s:6,f:19,a:5}),(2585427437,DataPointers{r:3,h:3,rl:2,s:4,f:13,a:5})],vec![(389268985,DataPointers{r:2,h:4,rl:3,s:7,f:0,a:0}),(425960662,DataPointers{r:2,h:4,rl:4,s:8,f:20,a:6}),(474269988,DataPointers{r:2,h:4,rl:4,s:8,f:21,a:6}),(1294026524,DataPointers{r:2,h:4,rl:3,s:9,f:0,a:0}),(1315870387,DataPointers{r:2,h:4,rl:3,s:9,f:0,a:0}),(1395789926,DataPointers{r:2,h:4,rl:4,s:8,f:22,a:6}),(1458010786,DataPointers{r:2,h:4,rl:4,s:8,f:0,a:0}),(2353477480,DataPointers{r:2,h:4,rl:3,s:9,f:0,a:0}),(2977709078,DataPointers{r:2,h:4,rl:3,s:9,f:0,a:0}),(3063320916,DataPointers{r:2,h:4,rl:4,s:8,f:0,a:0}),(3913463509,DataPointers{r:2,h:4,rl:3,s:9,f:0,a:0}),(4130495068,DataPointers{r:2,h:4,rl:3,s:9,f:0,a:0}),(1174163613,DataPointers{r:2,h:4,rl:3,s:10,f:0,a:0}),(1759472859,DataPointers{r:2,h:4,rl:4,s:8,f:0,a:0})],vec![(213689231,DataPointers{r:4,h:5,rl:5,s:11,f:23,a:7}),(507151084,DataPointers{r:5,h:5,rl:5,s:11,f:24,a:7}),(647617635,DataPointers{r:4,h:5,rl:5,s:11,f:23,a:7}),(1030990989,DataPointers{r:4,h:5,rl:5,s:11,f:25,a:8}),(1294026524,DataPointers{r:4,h:5,rl:5,s:11,f:23,a:7}),(1322370662,DataPointers{r:4,h:5,rl:5,s:11,f:26,a:9}),(1791592647,DataPointers{r:4,h:5,rl:5,s:11,f:26,a:9}),(1863355414,DataPointers{r:4,h:5,rl:5,s:11,f:23,a:7}),(2144092201,DataPointers{r:4,h:5,rl:5,s:11,f:23,a:7}),(2189829540,DataPointers{r:4,h:5,rl:5,s:11,f:23,a:7}),(2757685314,DataPointers{r:5,h:5,rl:5,s:11,f:24,a:7}),(2770223582,DataPointers{r:6,h:5,rl:5,s:11,f:27,a:7}),(3174300811,DataPointers{r:7,h:5,rl:5,s:11,f:28,a:10}),(3468089894,DataPointers{r:5,h:5,rl:5,s:11,f:24,a:7}),(3923638944,DataPointers{r:4,h:5,rl:5,s:11,f:24,a:7}),(4045839491,DataPointers{r:5,h:5,rl:5,s:11,f:29,a:7})],vec![(1531126198,DataPointers{r:2,h:6,rl:6,s:12,f:30,a:11}),(2057203855,DataPointers{r:2,h:6,rl:6,s:12,f:31,a:11}),(2564164194,DataPointers{r:2,h:6,rl:6,s:13,f:31,a:11}),(3884127242,DataPointers{r:2,h:6,rl:6,s:12,f:32,a:11}),(2881100038,DataPointers{r:2,h:6,rl:6,s:14,f:31,a:11})],vec![(878286503,DataPointers{r:8,h:7,rl:7,s:15,f:33,a:12}),(1019291327,DataPointers{r:8,h:7,rl:7,s:15,f:34,a:13}),(1294026524,DataPointers{r:8,h:7,rl:7,s:15,f:35,a:13}),(2261491232,DataPointers{r:8,h:7,rl:7,s:15,f:36,a:14}),(2608508147,DataPointers{r:8,h:7,rl:7,s:15,f:37,a:12}),(4148158229,DataPointers{r:8,h:7,rl:7,s:15,f:35,a:13}),(2940035732,DataPointers{r:8,h:7,rl:7,s:15,f:36,a:15})],vec![(878286503,DataPointers{r:9,h:8,rl:8,s:16,f:38,a:16}),(1019291327,DataPointers{r:9,h:8,rl:8,s:16,f:39,a:16}),(1294026524,DataPointers{r:9,h:8,rl:8,s:16,f:40,a:16}),(1458010786,DataPointers{r:9,h:8,rl:8,s:16,f:41,a:16}),(2307143135,DataPointers{r:9,h:8,rl:8,s:16,f:42,a:16}),(2874284214,DataPointers{r:9,h:8,rl:8,s:17,f:43,a:16}),(3837077246,DataPointers{r:9,h:8,rl:8,s:17,f:43,a:16}),(3905543891,DataPointers{r:9,h:8,rl:8,s:16,f:44,a:16}),(4004944400,DataPointers{r:9,h:8,rl:8,s:16,f:41,a:16}),(4208418110,DataPointers{r:9,h:8,rl:8,s:16,f:41,a:16}),(4172222323,DataPointers{r:9,h:8,rl:8,s:16,f:41,a:16}),(3441203855,DataPointers{r:9,h:8,rl:8,s:16,f:40,a:16})],vec![(216781713,DataPointers{r:2,h:9,rl:9,s:18,f:45,a:17}),(411799453,DataPointers{r:2,h:9,rl:9,s:18,f:46,a:17}),(1019291327,DataPointers{r:2,h:9,rl:9,s:18,f:47,a:17}),(1294026524,DataPointers{r:2,h:9,rl:9,s:18,f:48,a:17}),(2200569208,DataPointers{r:2,h:9,rl:9,s:19,f:49,a:17}),(2473404935,DataPointers{r:2,h:9,rl:9,s:20,f:49,a:17}),(3419274965,DataPointers{r:2,h:9,rl:9,s:18,f:45,a:17}),(3468089894,DataPointers{r:2,h:9,rl:9,s:18,f:50,a:17}),(3649430342,DataPointers{r:2,h:9,rl:9,s:18,f:51,a:17}),(2962361451,DataPointers{r:2,h:9,rl:9,s:18,f:48,a:17})],vec![(377257911,DataPointers{r:10,h:10,rl:10,s:21,f:52,a:18}),(1000724343,DataPointers{r:10,h:10,rl:10,s:21,f:53,a:18}),(1019291327,DataPointers{r:10,h:10,rl:10,s:21,f:53,a:18}),(1319823571,DataPointers{r:10,h:10,rl:0,s:22,f:54,a:18}),(1458010786,DataPointers{r:10,h:10,rl:10,s:21,f:52,a:18}),(1636108362,DataPointers{r:10,h:10,rl:10,s:21,f:55,a:18}),(2741975068,DataPointers{r:10,h:10,rl:10,s:21,f:53,a:18}),(3364911712,DataPointers{r:10,h:10,rl:10,s:21,f:56,a:18}),(3668782036,DataPointers{r:10,h:10,rl:10,s:21,f:53,a:18}),(3920852688,DataPointers{r:10,h:10,rl:10,s:21,f:56,a:18}),(4185339856,DataPointers{r:10,h:10,rl:10,s:21,f:56,a:18}),(3468089894,DataPointers{r:10,h:10,rl:0,s:21,f:54,a:18}),(2724693746,DataPointers{r:10,h:10,rl:10,s:21,f:56,a:18})],vec![(372430833,DataPointers{r:11,h:11,rl:11,s:23,f:57,a:19}),(481338655,DataPointers{r:0,h:11,rl:11,s:23,f:58,a:19}),(895140517,DataPointers{r:11,h:11,rl:11,s:23,f:59,a:19}),(536517534,DataPointers{r:0,h:11,rl:11,s:24,f:60,a:19}),(918679156,DataPointers{r:12,h:11,rl:11,s:24,f:60,a:19}),(996573084,DataPointers{r:11,h:11,rl:11,s:23,f:61,a:19}),(1210807262,DataPointers{r:0,h:11,rl:11,s:25,f:62,a:19}),(1394384862,DataPointers{r:12,h:11,rl:11,s:24,f:60,a:19}),(1458010786,DataPointers{r:11,h:11,rl:11,s:23,f:62,a:19}),(1636108362,DataPointers{r:11,h:11,rl:11,s:23,f:59,a:19}),(2223914385,DataPointers{r:11,h:11,rl:11,s:23,f:63,a:19}),(3054949324,DataPointers{r:11,h:11,rl:11,s:23,f:57,a:19}),(3468089894,DataPointers{r:11,h:11,rl:11,s:23,f:57,a:19}),(3983457027,DataPointers{r:11,h:11,rl:11,s:23,f:57,a:19})],vec![(281315705,DataPointers{r:2,h:12,rl:12,s:26,f:64,a:20}),(878286503,DataPointers{r:2,h:12,rl:12,s:26,f:65,a:20}),(938999636,DataPointers{r:2,h:12,rl:12,s:26,f:65,a:20}),(1070100196,DataPointers{r:2,h:12,rl:12,s:26,f:66,a:20}),(1294026524,DataPointers{r:2,h:12,rl:12,s:26,f:66,a:20}),(2909403175,DataPointers{r:2,h:12,rl:12,s:26,f:65,a:20}),(3081173348,DataPointers{r:2,h:12,rl:12,s:26,f:67,a:20}),(3468089894,DataPointers{r:2,h:12,rl:12,s:26,f:67,a:20})],vec![(630329983,DataPointers{r:13,h:13,rl:13,s:27,f:68,a:21}),(1294026524,DataPointers{r:13,h:13,rl:13,s:27,f:69,a:22}),(1458010786,DataPointers{r:13,h:13,rl:13,s:27,f:70,a:22}),(1525239159,DataPointers{r:13,h:13,rl:13,s:27,f:68,a:21}),(1636108362,DataPointers{r:13,h:13,rl:13,s:27,f:71,a:21}),(2213377102,DataPointers{r:13,h:13,rl:13,s:27,f:70,a:22}),(2516532331,DataPointers{r:13,h:13,rl:13,s:27,f:69,a:22}),(2540536653,DataPointers{r:13,h:13,rl:13,s:27,f:68,a:21}),(3468089894,DataPointers{r:13,h:13,rl:13,s:27,f:68,a:21}),(2965975126,DataPointers{r:14,h:3,rl:13,s:27,f:72,a:22}),(228577175,DataPointers{r:13,h:13,rl:13,s:27,f:70,a:22})],vec![(1900919151,DataPointers{r:15,h:3,rl:0,s:28,f:73,a:23}),(3551884421,DataPointers{r:15,h:3,rl:0,s:28,f:74,a:23}),(3024740338,DataPointers{r:15,h:3,rl:0,s:28,f:75,a:23}),(131675355,DataPointers{r:15,h:3,rl:0,s:28,f:73,a:23}),(1986105578,DataPointers{r:15,h:3,rl:0,s:28,f:75,a:23})],vec![(459441288,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24}),(571267712,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24}),(1036269296,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24}),(1657401727,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24}),(1797707170,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24}),(1294026524,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24}),(3164944314,DataPointers{r:16,h:3,rl:0,s:29,f:76,a:24})],vec![(31057037,DataPointers{r:17,h:3,rl:14,s:30,f:77,a:25}),(334466122,DataPointers{r:17,h:3,rl:14,s:30,f:78,a:25}),(806997698,DataPointers{r:17,h:3,rl:14,s:30,f:79,a:25}),(975429949,DataPointers{r:17,h:3,rl:14,s:30,f:80,a:25}),(986191425,DataPointers{r:17,h:3,rl:14,s:30,f:80,a:25}),(1282254042,DataPointers{r:17,h:3,rl:14,s:30,f:80,a:25}),(1294026524,DataPointers{r:17,h:3,rl:14,s:30,f:78,a:25}),(1458010786,DataPointers{r:17,h:3,rl:14,s:30,f:81,a:25}),(1636108362,DataPointers{r:17,h:3,rl:14,s:30,f:80,a:25}),(2121086290,DataPointers{r:17,h:3,rl:14,s:30,f:78,a:25}),(3330548924,DataPointers{r:17,h:3,rl:14,s:30,f:82,a:25}),(3449390870,DataPointers{r:17,h:3,rl:14,s:30,f:78,a:25}),(2641107734,DataPointers{r:17,h:3,rl:14,s:30,f:77,a:25}),(2984682260,DataPointers{r:18,h:3,rl:15,s:30,f:83,a:26})]];
    let meta_pointer_map = HashMap::from(META_POINTERS);
    let intrinsic_pointer = meta_pointer_map.get(&_weapon_type_id).clone();
    if intrinsic_pointer.is_none() {
        return Err(());
    };
    let intrinsic_vec = &weapon_paths[*intrinsic_pointer.unwrap()];
    let mut intrinsic_map = HashMap::new();
    for (hash, pointer) in intrinsic_vec {
        intrinsic_map.insert(hash, pointer);
    };
    let intrinsic_pointer = intrinsic_map.get(&_intrinsic_hash);
    if intrinsic_pointer.is_none() {
        return Err(());
    };
    let intrinsic_pointer = intrinsic_pointer.unwrap().clone();
    Ok(intrinsic_pointer.clone())
}


impl Weapon {
    pub fn generate_weapon(_hash: u32, _weapon_type_id: u8, _intrinsic_hash: u32, _ammo_type_id: u32, _damage_type_id: u32) -> Result<Weapon, ()> {

        let data_pointer_result = get_data_pointers(_weapon_type_id, _intrinsic_hash);
        if data_pointer_result.is_err() {
            return Err(())
        }
        let data_pointer = data_pointer_result.unwrap();

        let range_formula: RangeFormula = RANGE_DATA[data_pointer.r].clone();

        let handling_formula: HandlingFormula = HANDLING_DATA[data_pointer.h].clone();

        let reload_formula: ReloadFormula = RELOAD_DATA[data_pointer.rl].clone();

        let damage_mods: DamageMods = SCALAR_DATA[data_pointer.s].clone();

        let firing_data: FiringConfig = FIRING_DATA[data_pointer.f].clone();

        let ammo_formula: AmmoFormula = AMMO_DATA[data_pointer.a].clone();

        let weapon_type = WeaponType::from_u32(_weapon_type_id as u32);
        let ammo_type = AmmoType::from_u32(_ammo_type_id);
        let damage_type = DamageType::from_u32(_damage_type_id);

        let new_intrinsic_hash = enhanced_check(_intrinsic_hash).0;
        Ok(Weapon {
            is_pvp: false,
            explosive_percent: 0.0,
            hash: _hash,
            perks: HashMap::from([(new_intrinsic_hash, Perk{stat_buffs:HashMap::new(), enhanced: false, value: 0, hash:new_intrinsic_hash})]),
            stats: HashMap::new(),
            damage_mods,
            ammo_formula,
            firing_data,
            handling_formula,
            reload_formula,
            range_formula,
            ammo_type,
            damage_type,
            weapon_type,
        })
    }
}